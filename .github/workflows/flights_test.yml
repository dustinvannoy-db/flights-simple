name: Deploy flights_project to TEST

concurrency: 1

on:
  workflow_dispatch:

  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - dev
    paths:
      - "**/*.yml"
      - "**/*.py"

  # push:
  #   branches:
  #     - feature/202407
  #   paths:
  #     - "**/*.yml"
  #     - "**/*.py"

jobs:
  deploy:
    name: "Test and deploy bundle"
    runs-on: ubuntu-latest
    environment: test
    defaults:
      run:
        working-directory: .
  
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      #    cache: 'pip' # caching pip dependencies
      - run: python -m pip install --upgrade pip
      - run: pip install wheel
      - run: pip3 install wheel
      - run: pip install -r requirements.txt

      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run unit tests
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN_TST }}
          DATABRICKS_CLUSTER_ID: ${{ secrets.DATABRICKS_CLUSTER_ID }}
          # SPARK_REMOTE: ${{secrets.SPARK_REMOTE_TST}}   
        run: |
          pytest tests/ 
      #-k test_get_flight_schema__valid
      
      # - name: Run integration test with dbconnect
      #   env: 
      #     SPARK_REMOTE: ${{secrets.SPARK_REMOTE_TST}}
      #   run: |
      #     source .venv/bin/activate
      #     pytest tests/ -m "integration"
      
      - uses: databricks/setup-cli@main

      - run: databricks bundle deploy --target test
        env:
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN_TST }}
          DATABRICKS_BUNDLE_ENV: tst

  pipeline_update:
    name: "Run pipeline update"
    runs-on: ubuntu-latest
    environment: test
    defaults:
      run:
        working-directory: .

    needs:
      - deploy

    steps:
      - uses: actions/checkout@v3

      - uses: databricks/setup-cli@main

      - shell: bash
        name: Run pipeline update
        run: |
          set -o pipefail
          databricks bundle run -t test notebook_validation_job --refresh-all 2>&1 | tee output.log
        env:
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN_TST }}
          DATABRICKS_BUNDLE_ENV: tst
